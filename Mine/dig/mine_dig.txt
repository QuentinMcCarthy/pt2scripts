:local int dig
:local int digy
:local int digx
:local int tab
:global int finish

key.d()

isopen("mine")

; The script attempts to dig all squares before
; generating new layers
; This is to help prevent worker conflicts
; There is still a miniscule chance a worker will
; generate a new layer before/at the same time as
; the script, causing lost layers

; Always start at the first tab
tab = 1
tab(tab)

; Dig from top left to middle right
digx = 0
digy = 0

; Run script to dig from bottom right to middle left
execute("mine_digr")

; Loop through X and Y here
dig(digx, digy)
digx = digx + 1
gotoif(6, digx <= 3)
; End X loop

digx = 0
digy = digy + 1
gotoif(6, digy <= 1)
; End Y loop

; Wait until the child script is finished before continuing
waituntil(finish == 1)

; Keep digging if the tab still has layers
dig = ternary.int(hasLayers(), 1, 0)
newlayer()
gotoif(3, dig == 1)

; Otherwise go to the next tab
tab = tab + 1
gotoif(2, tab <= 12)

; Unset the global var to keep things clean :3
gu("finish")